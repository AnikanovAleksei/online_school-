version: '3.9'

services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: .
    command: >
      bash -c "celery -A ${DJANGO_PROJECT_NAME} worker --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started

  celery_beat:
    build: .
    command: >
      bash -c "celery -A ${DJANGO_PROJECT_NAME} beat --loglevel=info"
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started

volumes:
  postgres_data:
  static_volume:
